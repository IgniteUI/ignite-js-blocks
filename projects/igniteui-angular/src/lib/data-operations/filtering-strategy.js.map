{"version":3,"sources":["src/data-operations/filtering-strategy.ts"],"names":[],"mappings":";;AAEA,mFAAwF;AAOxF;IAAA;IA8CA,CAAC;IA7CU,kCAAM,GAAb,UAAiB,IAAS,EACT,WAAmC,EACnC,KAAsB;QACnC,IAAI,CAAC,CAAC;QACN,IAAI,GAAG,CAAC;QACR,IAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;QACxB,IAAM,GAAG,GAAQ,EAAE,CAAC;QACpB,EAAE,CAAC,CAAC,CAAC,WAAW,IAAI,CAAC,WAAW,CAAC,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YAC9C,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QACD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;YACvB,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACd,EAAE,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,GAAG,EAAE,WAAW,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC5D,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClB,CAAC;QACL,CAAC;QACD,MAAM,CAAC,GAAG,CAAC;IACf,CAAC;IACM,qCAAS,GAAhB,UAAiB,GAAW,EAAE,IAA0B,EAAE,KAAa;QACnE,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;QAC5B,IAAM,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAChC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IACtD,CAAC;IACM,oDAAwB,GAA/B,UAAgC,GAAW,EACX,WAAmC,EACnC,KAAa,EACb,KAAsB;QAClD,IAAI,CAAC,CAAC;QACN,IAAI,KAAK,GAAG,KAAK,CAAC;QAClB,IAAM,GAAG,GAAG,CAAC,KAAK,KAAK,+CAAc,CAAC,GAAG,CAAC,CAAC;QAC3C,IAAM,GAAG,GAAG,WAAW,CAAC,MAAM,CAAC;QAC/B,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;YACvB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC/C,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACN,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACT,MAAM,CAAC,KAAK,CAAC;gBACjB,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACR,MAAM,CAAC,IAAI,CAAC;gBAChB,CAAC;YACL,CAAC;QACL,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IACL,wBAAC;AAAD,CA9CA,AA8CC,IAAA;AA9CY,8CAAiB","file":"filtering-strategy.js","sourcesContent":["import {DataUtil} from \"./data-util\";\r\nimport { FilteringCondition } from \"./filtering-condition\";\r\nimport { FilteringLogic, IFilteringExpression } from \"./filtering-expression.interface\";\r\nimport { IFilteringState } from \"./filtering-state.interface\";\r\n\r\nexport interface IFilteringStrategy {\r\n    filter(data: any[], expressions: IFilteringExpression[], logic?: FilteringLogic): any[];\r\n}\r\n\r\nexport class FilteringStrategy implements IFilteringStrategy {\r\n    public filter<T>(data: T[],\r\n                     expressions: IFilteringExpression[],\r\n                     logic?: FilteringLogic): T[] {\r\n        let i;\r\n        let rec;\r\n        const len = data.length;\r\n        const res: T[] = [];\r\n        if (!expressions || !expressions.length || !len) {\r\n            return data;\r\n        }\r\n        for (i = 0; i < len; i++) {\r\n            rec = data[i];\r\n            if (this.matchRecordByExpressions(rec, expressions, i, logic)) {\r\n                res.push(rec);\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    public findMatch(rec: object, expr: IFilteringExpression, index: number): boolean {\r\n        const cond = expr.condition;\r\n        const val = rec[expr.fieldName];\r\n        return cond(val, expr.searchVal, expr.ignoreCase);\r\n    }\r\n    public matchRecordByExpressions(rec: object,\r\n                                    expressions: IFilteringExpression[],\r\n                                    index: number,\r\n                                    logic?: FilteringLogic): boolean {\r\n        let i;\r\n        let match = false;\r\n        const and = (logic === FilteringLogic.And);\r\n        const len = expressions.length;\r\n        for (i = 0; i < len; i++) {\r\n            match = this.findMatch(rec, expressions[i], i);\r\n            if (and) {\r\n                if (!match) {\r\n                    return false;\r\n                }\r\n            } else {\r\n                if (match) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return match;\r\n    }\r\n}\r\n"]}