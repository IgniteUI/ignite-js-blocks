{"version":3,"sources":["src/data-operations/stable-sorting-strategy.spec.ts"],"names":[],"mappings":";;AAOA,6DAA0D;AAE1D,gCAAmF;AAEnF,QAAQ,CAAC,oCAAoC,EAAE;IAC3C,IAAI,aAA4B,CAAC;IACjC,IAAI,IAAc,CAAC;IACnB,IAAI,QAAyB,CAAC;IAC9B,UAAU,CAAC;QACP,aAAa,GAAG,IAAI,8BAAa,CAAC,GAAG,CAAC,CAAC;QACvC,IAAI,GAAG,aAAa,CAAC,IAAI,CAAC;QAC1B,QAAQ,GAAG,IAAI,4BAAqB,EAAE,CAAC;IAC3C,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,cAAc,EAAE;QACf,IAAI,KAAK,CAAC;QACV,IAAI,KAAK,CAAC;QACV,IAAI,CAAC,OAAO,CAAC,UAAC,IAAI,EAAE,KAAK,IAAK,OAAC,IAA2B,CAAC,MAAM,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAvD,CAAuD,CAAC,CAAC;QAEvF,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAC,SAAS,EAAE,QAAQ,EAAE,GAAG,EAAE,uBAAgB,CAAC,GAAG,EAAC,CAAC,CAAC,CAAC;QACxE,KAAK,GAAG,aAAa,CAAC,kBAAkB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAElE,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAC,SAAS,EAAE,QAAQ,EAAE,GAAG,EAAE,uBAAgB,CAAC,GAAG,EAAC,CAAC,CAAC,CAAC;QACxE,KAAK,GAAG,aAAa,CAAC,kBAAkB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAClE,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","file":"stable-sorting-strategy.spec.js","sourcesContent":["import { Component, ViewChild } from \"@angular/core\";\r\nimport {\r\n    async,\r\n    TestBed\r\n} from \"@angular/core/testing\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { By } from \"@angular/platform-browser\";\r\nimport { DataGenerator} from \"./test-util/data-generator\";\r\n\r\nimport { SortingDirection, SortingStrategy, StableSortingStrategy } from \"../main\";\r\n\r\ndescribe(\"Unit testing StableSortingStrategy\", () => {\r\n    let dataGenerator: DataGenerator;\r\n    let data: object[];\r\n    let strategy: SortingStrategy;\r\n    beforeEach(() => {\r\n        dataGenerator = new DataGenerator(100);\r\n        data = dataGenerator.data;\r\n        strategy = new StableSortingStrategy();\r\n    });\r\n    it(\"tests `sort`\", () => {\r\n        let sort0;\r\n        let sort1;\r\n        data.forEach((item, index) => (item as { number: number }).number = index % 2 ? 0 : 1);\r\n\r\n        strategy.sort(data, [{fieldName: \"number\", dir: SortingDirection.Asc}]);\r\n        sort0 = dataGenerator.getValuesForColumn(data, \"string\").join(\"\");\r\n\r\n        strategy.sort(data, [{fieldName: \"number\", dir: SortingDirection.Asc}]);\r\n        sort1 = dataGenerator.getValuesForColumn(data, \"string\").join(\"\");\r\n        expect(sort0).toEqual(sort1);\r\n    });\r\n});\r\n"]}