{"version":3,"sources":["src/data-operations/test-util/test-helper.spec.ts"],"names":[],"mappings":"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","file":"test-helper.spec.js","sourcesContent":["/* class provides helper functions for testing */\r\nconst COUNT_ROWS = 5;\r\nconst COUNT_COLS = 4;\r\n\r\nexport class TestHelper {\r\n    columns: Array<{ name: string; type: string;}> = [];\r\n    generateArray(startValue, endValue) {\r\n        var len = Math.abs(startValue - endValue),\r\n            decrement = startValue > endValue;\r\n        return Array.from({length: len + 1}, (e,i)=> decrement? startValue - i: startValue + i);\r\n    }\r\n    getValuesForColumn(data, fieldName) {\r\n        return data.map((x) => x[fieldName]);\r\n    }\r\n    isSuperset(haystack, arr) {\r\n        return arr.every(val => haystack.indexOf(val) >= 0);\r\n    }\r\n    generateColumns(countCols) : Array<{name: string, type: string}> {\r\n        var i:number,\r\n            len: number,\r\n            res,\r\n            defaultColumns = [\r\n                {\r\n                    name: \"number\",\r\n                    type: \"number\"\r\n                },\r\n                {\r\n                    name: \"string\",\r\n                    type: \"string\"\r\n                },\r\n                {\r\n                    name: \"date\",\r\n                    type: \"date\"\r\n                },\r\n                {\r\n                    name: \"boolean\",\r\n                    type: \"boolean\"\r\n                }\r\n            ];\r\n        if (countCols <= 0) {\r\n            return defaultColumns;\r\n        }\r\n        if (countCols <= defaultColumns.length) {\r\n            return defaultColumns.slice(0, countCols);\r\n        }\r\n        len = countCols - defaultColumns.length;\r\n        res = defaultColumns;\r\n        for (i =0; i < len; i++) {\r\n            res.push({\r\n                name: `col${i}`,\r\n                type: \"string\"\r\n            })\r\n        }\r\n        return res;\r\n    }\r\n    generateData(countRows: number = COUNT_ROWS, countCols: number = COUNT_COLS) {\r\n        var i, j, data = [], rec, val, col, cols = this.generateColumns(countCols);\r\n        this.columns = cols;\r\n        for (i = 0; i < countRows; i++) {\r\n            rec = {};\r\n            for (j = 0; j < cols.length; j++) {\r\n                col = cols[j];\r\n                switch(col.type) {\r\n                    case \"number\":\r\n                        val = i;\r\n                        break;\r\n                    case \"date\":\r\n                        val = new Date(Date.now() + i * 24*60*60*1000);\r\n                        break;\r\n                    case \"boolean\":\r\n                        val = !!(i % 2);\r\n                        break;\r\n                    default:\r\n                        val = `row${i}, col${j}`;\r\n                        break;\r\n                }\r\n                rec[col.name] = val;\r\n            }\r\n            data.push(rec);\r\n        }\r\n        return data;\r\n    }\r\n}"]}