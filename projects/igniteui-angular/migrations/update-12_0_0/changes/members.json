{
  "$schema": "../../common/schema/members-changes.schema.json",
  "changes": [
    {
      "member": "onGridCreated",
      "replaceWith": "gridCreated",
      "definedIn": [
        "IgxRowIslandComponent"
      ]
    },
    {
      "member": "onGridInitialized",
      "replaceWith": "gridInitialized",
      "definedIn": [
        "IgxRowIslandComponent"
      ]
    },
    {
      "member": "onDataPreLoad",
      "replaceWith": "dataPreLoad",
      "definedIn": [
        "IgxHierarchicalGridComponent"
      ]
    },
    {
      "member": "onDataPreLoad",
      "replaceWith": "dataPreLoad",
      "definedIn": [
        "IgxGridComponent"
      ]
    },
    {
      "member": "onColumnToggled",
      "replaceWith": "columnToggled",
      "definedIn": [
        "IgxColumnActionsComponent"
      ]
    },
    {
      "member": "onColumnChange",
      "replaceWith": "columnChange",
      "definedIn": [
        "IgxColumnComponent"
      ]
    },
    {
      "member": "onChunkLoad",
      "replaceWith": "chunkLoad",
      "definedIn": [
        "IgxForOfDirective",
        "IgxGridForOfDirective"
      ]
    },
    {
      "member": "onScrollbarVisibilityChanged",
      "replaceWith": "scrollbarVisibilityChanged",
      "definedIn": [
        "IgxForOfDirective",
        "IgxGridForOfDirective"
      ]
    },
    {
      "member": "onContentSizeChange",
      "replaceWith": "contentSizeChange",
      "definedIn": [
        "IgxForOfDirective",
        "IgxGridForOfDirective"
      ]
    },
    {
      "member": "onDataChanged",
      "replaceWith": "dataChanged",
      "definedIn": [
        "IgxForOfDirective",
        "IgxGridForOfDirective"
      ]
    },
    {
      "member": "onBeforeViewDestroyed",
      "replaceWith": "beforeViewDestroyed",
      "definedIn": [
        "IgxForOfDirective",
        "IgxGridForOfDirective"
      ]
    },
    {
      "member": "onChunkPreload",
      "replaceWith": "chunkPreload",
      "definedIn": [
        "IgxForOfDirective",
        "IgxGridForOfDirective"
      ]
    },
    {
      "member": "onDataChanging",
      "replaceWith": "dataChanging",
      "definedIn": [
        "IgxGridForOfDirective"
      ]
    },
    {
        "member": "isSpinLoop",
        "replaceWith": "spinLoop",
        "definedIn": [
            "IgxDateTimeEditorDirective",
            "IgxTimePickerComponent"
        ]
    },
    {
        "member": "onValueChange",
        "replaceWith": "valueChange",
        "definedIn": [
            "IgxDateTimeEditorDirective"
        ]
    },
    {
        "member": "selectDate",
        "replaceWith": "select",
        "definedIn": [
            "IgxDatePickerComponent"
        ]
    },
    {
        "member": "triggerTodaySelection",
        "replaceWith": "selectToday",
        "definedIn": [
            "IgxDatePickerComponent"
        ]
    },
    {
        "member": "deselectDate",
        "replaceWith": "clear",
        "definedIn": [
            "IgxDatePickerComponent"
        ]
    },
    {
        "member": "openDialog",
        "replaceWith": "open",
        "definedIn": [
            "IgxDatePickerComponent"
        ]
    },
    {
        "member": "editorTabIndex",
        "replaceWith": "tabIndex",
        "definedIn": [
            "IgxDatePickerComponent"
        ]
    },
    {
        "member": "mask",
        "replaceWith": "inputFormat",
        "definedIn": [
            "IgxDatePickerComponent"
        ]
    },
    {
        "member": "monthsViewNumber",
        "replaceWith": "displayMonthsCount",
        "definedIn": [
            "IgxDatePickerComponent",
            "IgxRangePickerComponent"
        ]
    },
    {
        "member": "vertical",
        "replaceWith": "headerOrientation",
        "definedIn": [
            "IgxDatePickerComponent"
        ]
    },
    {
        "member": "displayData",
        "replaceWith": "displayFormat",
        "definedIn": [
            "IgxDatePickerComponent"
        ]
    },
    {
        "member": "format",
        "replaceWith": "inputFormat",
        "definedIn": [
            "IgxDatePickerComponent"
        ]
    },
    {
        "member": "dropDownOverlaySettings",
        "replaceWith": "overlaySettings",
        "definedIn": [
            "IgxDatePickerComponent"
        ]
    },
    {
        "member": "modalOverlaySettings",
        "replaceWith": "overlaySettings",
        "definedIn": [
            "IgxDatePickerComponent"
        ]
    },
    {
        "member": "onSelection",
        "replaceWith": "valueChange",
        "definedIn": [
            "IgxDatePickerComponent"
        ]
    },
    {
        "member": "onClosing",
        "replaceWith": "closing",
        "definedIn": [
            "IgxDatePickerComponent",
            "IgxTimePickerComponent",
            "IgxRangePickerComponent"
        ]
    },
    {
        "member": "onClosed",
        "replaceWith": "closed",
        "definedIn": [
            "IgxDatePickerComponent",
            "IgxTimePickerComponent",
            "IgxRangePickerComponent"
        ]
    },
    {
        "member": "onOpening",
        "replaceWith": "opening",
        "definedIn": [
            "IgxDatePickerComponent",
            "IgxTimePickerComponent",
            "IgxRangePickerComponent"
        ]
    },
    {
        "member": "onOpened",
        "replaceWith": "opened",
        "definedIn": [
            "IgxDatePickerComponent",
            "IgxTimePickerComponent",
            "IgxRangePickerComponent"
        ]
    },
    {
        "member": "onValidationFailed",
        "replaceWith": "validationFailed",
        "definedIn": [
            "IgxDatePickerComponent"
        ]
    },
    {
        "member": "okButtonClicked",
        "replaceWith": "close",
        "definedIn": [
            "IgxTimePickerComponent"
        ]
    },
    {
        "member": "openDialog",
        "replaceWith": "open",
        "definedIn": [
            "IgxTimePickerComponent"
        ]
    },
    {
        "member": "format",
        "replaceWith": "inputFormat",
        "definedIn": [
            "IgxTimePickerComponent"
        ]
    },
    {
        "member": "onValueChanged",
        "replaceWith": "valueChange",
        "definedIn": [
            "IgxTimePickerComponent"
        ]
    },
    {
        "member": "onValidationFailed",
        "replaceWith": "validationFailed",
        "definedIn": [
            "IgxTimePickerComponent"
        ]
    },
    {
        "member": "selectRange",
        "replaceWith": "select",
        "definedIn": [
            "IgxRangePickerComponent"
        ]
    },
    {
        "member": "rangeSelected",
        "replaceWith": "valueChange",
        "definedIn": [
            "IgxRangePickerComponent"
        ]
    }
  ]
}

