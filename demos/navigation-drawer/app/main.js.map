{"version":3,"sources":["demos/navigation-drawer/app/main.ts"],"names":[],"mappings":"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","file":"demos/navigation-drawer/app/main.js","sourcesContent":["import {Component, ViewChild } from '@angular/core';\nimport * as Infragistics from '../../../src/main';\n\n@Component({\n    selector: 'sample-app',\n    providers: [Infragistics.NavigationService],\n    styleUrls: [\"app/main.css\"],\n    templateUrl: \"app/main.html\",\n    directives: [\n        Infragistics.NavigationDrawer,\n        Infragistics.NavigationToggle,\n        Infragistics.NavigationClose\n    ]\n})\nexport class AppComponent {\n    navItems: Array<Object> = [{\n        text: \"Nav1\", link: \"#\"\n    },{\n        text: \"Nav2\", link: \"#\"\n    },{\n        text: \"Nav3\", link: \"#\"\n    },{\n        text: \"Nav4\", link: \"#\"\n    }];\n\n    pin: boolean = false;\n    gestures: boolean = true;\n    open: boolean = false;\n    position = \"left\";\n    drawerWidth = \"\";\n    drawerMiniWidth = \"\";\n    @ViewChild(Infragistics.NavigationDrawer) viewChild: Infragistics.NavigationDrawer;\n    \n    /** Sample-specific configurations: */\n    miniTemplate: boolean = false;\n    showGestureToggle: boolean = true;\n    showPositions: boolean = true;\n    showPinToggle: boolean = false;\n    showMiniWidth: boolean = false;\n    showEventLog: boolean = true;\n    showToggle: boolean = true;\n    log: Array<string> = new Array<string>();\n    \n    logEvent(event) {\n        this.log.push(event);\n        if(event === \"closing\") {\n            // this will cause change detection, potentially run outside of angular\n            this.open = false;\n        }\n        if(event === \"opening\") {\n            this.open = true;\n        }\n    }\n    testToggle () {\n        this.viewChild.toggle().then( (value) => {\n            this.logEvent(\"API call resolved: \" + value);\n        });\n    }\n\n    removeItem(index) {\n        let newNavItems: Array<Object> = this.navItems.filter( (v, i) => i !== index);\n        this.navItems = newNavItems;\n    }\n\n    recycle(index) {\n        alert(\"recycle \" + index);\n    }\n\n    eat(index) {\n        alert(\"eat \" + index);\n    }\n}\n\n\n/**\n * Pin demo\n */\n@Component({\n    selector: 'sample-app',\n    providers: [Infragistics.NavigationService],\n    styleUrls: [\"app/main.css\"],\n    templateUrl: \"app/main.html\",\n    directives: [\n        Infragistics.NavigationDrawer,\n        Infragistics.NavigationToggle,\n        Infragistics.NavigationClose\n    ]\n})\nexport class AppComponentPin extends AppComponent {\n    constructor() {\n        super();\n        this.open = true;\n        this.pin = true;\n        \n        //sample config\n        this.showPinToggle = true;\n        this.showPositions = false;\n    }\n}\n\n/**\n * Mini demo\n */\n@Component({\n    selector: 'sample-app',\n    providers: [Infragistics.NavigationService],\n    styleUrls: [\"app/main.css\"],\n    templateUrl: \"app/main-mini.html\",\n    directives: [\n        Infragistics.NavigationDrawer,\n        Infragistics.NavigationToggle,\n        Infragistics.NavigationClose\n    ]\n})\nexport class AppComponentMini extends AppComponent {\n    /**\n     * Main app component for the mini Navigation Drawer sample.\n     * Can't reuse template with other samples because ngIf on the mini template selector won't work\n     * Setup for future: Have mini content and show mini width input only on this sample.\n     * See https://github.com/angular/angular/issues/6303 \n     */\n    constructor() {\n        super();\n        \n        //sample config\n        this.showMiniWidth = true;\n        this.miniTemplate = true;\n        this.showToggle = false;\n    }\n}"],"sourceRoot":"/source/"}