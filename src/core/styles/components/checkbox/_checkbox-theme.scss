////
/// @group themes
/// @access public
/// @author <a href="https://github.com/simeonoff" target="_blank">Simeon Simeonoff</a>
/// @author <a href="https://github.com/desig9stein" target="_blank">Marin Popov</a>
////

/// @param {Color} $label-color [null]- The text color used for the label text.
/// @param {Color} $empty-color [null] - The unchecked border color.
/// @param {Color} $fill-color [null] - The checked border and fill colors.
/// @param {Color} $tick-color [null] - The checked mark color.
/// @param {Color} $disabled-color [null] - The disabled border and fill colors.
/// @param {Bool} $light [null] - Determines the default color scheme - light or not.
/// Set light to true when the surrounding area is dark.
/// @example scss Change the checked fill color
///   $my-checkbox-theme: igx-checkbox-theme($fill-color: magenta);
///   // Pass the theme to the igx-checkbox component mixin
///   @include igx-checkbox($my-checkbox-theme);
@function igx-checkbox-theme(
    $label-color: null,
    $empty-color: null,
    $fill-color: null,
    $tick-color: null,
    $disabled-color: null,
    $light: false
) {
    @return (
        label-color: $label-color,
        empty-color: $empty-color,
        fill-color: $fill-color,
        tick-color: $tick-color,
        disabled-color: $disabled-color,
        light: $light
    );
}

/// @param {Map} $theme - The theme used to style the component.
/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.
/// @requires igx-checkbox-theme
/// @requires igx-color
/// @requires extend
/// @requires rem
@mixin igx-checkbox($theme, $palette: $default-palette) {
    $dark-theme: igx-checkbox-theme(
        $label-color: igx-color($palette, grays, 900),
        $empty-color: igx-color($palette, 'grays', 600),
        $fill-color: igx-color($palette, 'secondary', 500),
        $tick-color: #fff,
        $disabled-color: igx-color($palette, grays, 400)
    );

    $light-theme: igx-checkbox-theme(
        $label-color: igx-color($palette, 'grays', 600),
        $empty-color: rgba(255, 255, 255, .7),
        $fill-color: igx-color($palette, 'secondary', 500),
        $tick-color: #000,
        $disabled-color: rgba(255, 255, 255, .3)
    );

    $this: ();

    @if map-get($theme, 'light') {
        $this: extend($light-theme, $theme);
    } @else {
        $this: extend($dark-theme, $theme);
    }

    $label-font-size: em(16px);
    $size: em(20px);
    $border-width: 2px;
    $label-margin: em(8px);
    $radius: 2px;

    $mark-stroke: 3;
    $mark-length: 24;
    $mark-x-factor: $mark-stroke / $mark-length;

    $ripple-size: em(48px);
    $ripple-radius: $ripple-size / 2;

    @include scale-in-center();

    %cbx-display {
        display: inline-flex;
        flex-flow: row nowrap;
        align-items: center;
        font-size: rem(16px);
    }

    %cbx-display--disabled {
        user-select: none;
        pointer-events: none;
        cursor: initial;
    }

    %cbx-composite {
        position: relative;
        display: inline-block;
        cursor: pointer;
        width: $size;
        height: $size;
        border-width: $border-width;
        border-style: solid;
        border-color: map-get($this, 'empty-color');
        border-radius: $radius;
        -webkit-tap-highlight-color: transparent;
        transition: border-color .2s $ease-out-quad;

        &::after {
            position: absolute;
            content: '';
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            transition: background .2s $ease-out-quad;
        }
    }

    %cbx-composite--x {
        border-color: map-get($this, 'fill-color');

        &::after {
            background: map-get($this, 'fill-color');
        }
    }

    %cbx-composite--disabled {
        border-color: map-get($this, 'disabled-color');
    }

    %cbx-composite--x--disabled {
        &::after {
            background: map-get($this, 'disabled-color');
        }
    }

    %cbx-composite-mark {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        stroke: map-get($this, 'tick-color');
        stroke-linecap: square;
        stroke-width: $mark-stroke;
        stroke-dasharray: $mark-length;
        stroke-dashoffset: $mark-length;
        fill: none;
        opacity: 0;
        z-index: 1;
        transition: opacity .1s $ease-out-quad;
    }

    %cbx-composite-mark--x {
        stroke-dashoffset: 0;
        opacity: 1;
        transition: all .2s $ease-out-quad, opacity .2s $ease-out-quad;
    }

    %cbx-composite-mark--in {
        stroke-dashoffset: 41; /* length of path - adjacent line length */
        opacity: 1;
        transform: rotate(45deg) translateX(-#{$mark-x-factor}em);
    }

    %cbx-label {
        display: inline-block;
        color: map-get($this, 'label-color');
        font-size: $label-font-size;
        line-height: 1;
        cursor: pointer;
        user-select: none;
        word-wrap: break-all;

        &:empty {
            margin: 0;
        }
    }

    %cbx-label-pos--after {
        margin-left: $label-margin;
    }

    %cbx-label-pos--before {
        margin-right: $label-margin;
        order: -1;
    }

    %cbx-label--disabled {
        color: map-get($this, 'disabled-color');
    }

    %cbx-ripple {
        @include igx-ripple((
            color: map-get($this, 'fill-color')
        ));
        position: absolute;
        top: calc(50% - #{$ripple-radius});
        left: calc(50% - #{$ripple-radius});
        width: $ripple-size;
        height: $ripple-size;
        border-radius: $ripple-radius;
        overflow: hidden;
        pointer-events: none;
        filter: opacity(1);
    }
}
