////
/// @group themes
/// @access public
/// @author <a href="https://github.com/simeonoff" target="_blank">Simeon Simeonoff</a>
/// @author <a href="https://github.com/desig9stein" target="_blank">Marin Popov</a>
////

/// @param {Color} $label-color [null]- The text color used for the label text.
/// @param {Color} $empty-color [null] - The unchecked border color.
/// @param {Color} $fill-color [null] - The checked border and fill colors.
/// @param {Color} $tick-color [null] - The checked mark color.
/// @param {Color} $disabled-color [null] - The disabled border and fill colors.
/// @param {Bool} $light [null] - Determines the default color scheme - light or not.
/// Set light to true when the surrounding area is dark.
/// @example scss Change the checked fill color
///   $my-checkbox-theme: igx-checkbox-theme($fill-color: magenta);
///   // Pass the theme to the igx-checkbox component mixin
///   @include igx-checkbox($my-checkbox-theme);
@function igx-checkbox-theme(
    $label-color: null,
    $empty-color: null,
    $fill-color: null,
    $tick-color: null,
    $disabled-color: null,
    $light: false
) {
    @return (
        label-color: $label-color,
        empty-color: $empty-color,
        fill-color: $fill-color,
        tick-color: $tick-color,
        disabled-color: $disabled-color,
        light: $light
    );
}

/// @param {Map} $theme - The theme used to style the component.
/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.
/// @requires igx-checkbox-theme
/// @requires igx-color
/// @requires extend
/// @requires rem
@mixin igx-checkbox($theme, $palette: $default-palette) {
    $dark-theme: igx-checkbox-theme(
        $label-color: igx-color($palette, grays, 900),
        $empty-color: igx-color($palette, 'grays', 600),
        $fill-color: igx-color($palette, 'secondary', 500),
        $tick-color: #fff,
        $disabled-color: igx-color($palette, grays, 400)
    );

    $light-theme: igx-checkbox-theme(
        $label-color: igx-color($palette, 'grays', 600),
        $empty-color: rgba(255, 255, 255, .7),
        $fill-color: igx-color($palette, 'secondary', 500),
        $tick-color: #000,
        $disabled-color: rgba(255, 255, 255, .3)
    );

    $this: ();

    @if map-get($theme, 'light') {
        $this: extend($light-theme, $theme);
    } @else {
        $this: extend($dark-theme, $theme);
    }

    $input-font-size: rem(16px);
    $input-font-weight: 400;

    $checkbox-min-width: 20px;
    $checkbox-height: $checkbox-min-width;
    $checkbox-label-padding: rem(24px, 16px);
    $checkbox-radius: 2px;
    $checkbox-border-style: 2px solid;
    $checkbox-tick-width: 20px;
    $checkbox-tick-height: 20px;
    $checkbox-tick-weight: 3px;
    $checkbox-tick-padding: 3px 2px 2px;

    @include scale-in-center();

    %igx-cbx-lbl-display {
        display: inline-block;
        position: relative;
        cursor: pointer;
        min-width: $checkbox-min-width;
        min-height: $checkbox-height;
        line-height: $checkbox-height;
        font-size: $input-font-size;
        font-weight: $input-font-weight;
        color: map-get($this, 'label-color');
        user-select: none;
        -webkit-tap-highlight-color: transparent;
        overflow: hidden;
        padding-left: $checkbox-label-padding;

        &::after {
            position: absolute;
            content: '';
            top: 0;
            left: 0;
            border-radius: $checkbox-radius;
        }
    }

    %igx-cbx-lbl-box {
        width: $checkbox-min-width;
        height: $checkbox-height;
    }

    %igx-cbx-lbl-tick {
        position: absolute;
        top: 0;
        left: 0;
        width: $checkbox-tick-width;
        height: $checkbox-tick-height;
        padding: $checkbox-tick-padding;
        stroke: none;
        stroke-linecap: round;
        stroke-width: $checkbox-tick-weight;
        fill: none;
        z-index: 1;
    }

    %igx-cbx-lbl-checked-tick {
        @include animation('scale-in-center' .3s $ease-out-back both);
        stroke: map-get($this, 'tick-color');
    }

    %igx-cbx-lbl-unchecked-after {
        @extend %igx-cbx-lbl-box;
        border: $checkbox-border-style map-get($this, 'empty-color');
    }

    %igx-cbx-lbl-checked-after {
        @extend %igx-cbx-lbl-box;
        background-color: map-get($this, fill-color);
        border: $checkbox-border-style map-get($this, 'fill-color');
    }

    %igx-cbx-lbl-disabled {
        color: map-get($this, 'disabled-color');
        pointer-events: none;
    }

    %igx-cbx-lbl-checked--disabled-after {
        background-color: map-get($this, 'disabled-color');
        border-color: map-get($this, 'disabled-color');
    }

    %igx-cbx-lbl-unchecked--disabled-after {
        border-color: map-get($this, 'disabled-color');
    }

    %igx-cbx-lbl--indeterminate-after {
        background-color: map-get($this, 'fill-color');
        border: $checkbox-border-style map-get($this, 'fill-color');
    }
}


