////
/// @group themes
/// @access public
/// @author <a href="https://github.com/simeonoff" target="_blank">Simeon Simeonoff</a>
/// @author <a href="https://github.com/desig9stein" target="_blank">Marin Popov</a>
////

/// @param {Color} $label-color [null]- The text color used for the label text.
/// @param {Color} $empty-color [null] - The unchecked border color.
/// @param {Color} $fill-color [null] - The checked border and dot colors.
/// @param {Color} $disabled-color [null] - The disabled border and dot colors.
/// @param {Bool} $light [null] - Determines the default color scheme - light or not.
/// Set light to true when the surrounding area is dark.
/// @example scss Change the checked dot and border colors
///   $my-radio-theme: igx-radio-theme($fill-color: magenta);
///   // Pass the theme to the igx-radio component mixin
///   @include igx-radio($my-radio-theme);
@function igx-radio-theme(
    $label-color: null,
    $empty-color: null,
    $fill-color: null,
    $disabled-color: null,

    $light: false
) {
    @return (
        label-color: $label-color,
        empty-color: $empty-color,
        fill-color: $fill-color,
        disabled-color: $disabled-color,

        light: $light,
    );
}

/// @param {Map} $theme - The theme used to style the component.
/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.
/// @requires igx-radio-theme
/// @requires igx-color
/// @requires extend
/// @requires rem
@mixin igx-radio($theme, $palette: $default-palette) {
    $dark-theme: igx-radio-theme(
        $label-color: igx-color($palette, 'grays', 900),
        $empty-color: igx-color($palette, 'grays', 600),
        $fill-color: igx-color($palette, 'secondary', 500),
        $disabled-color: igx-color($palette, 'grays', 400)
    );

    $light-theme: igx-radio-theme(
        $label-color: igx-color($palette, 'grays', 600),
        $empty-color: rgba(255, 255, 255, .7),
        $fill-color: igx-color($palette, 'secondary', 500),
        $disabled-color: rgba(255, 255, 255, .3)
    );

    $this: ();

    @if map-get($theme, 'light') {
        $this: extend($light-theme, $theme);
    } @else {
        $this: extend($dark-theme, $theme);
    }

    $font-size: 16px;
    $label-margin: em(8px);

    $size: em(20px);

    $border-style: 2px solid;
    $border-radius: 50% 50%;

    $transition: all .2s ease-in;

    $ripple-size: em(48px);
    $ripple-radius: $ripple-size / 2;

    %radio-display {
        display: inline-flex;
        flex-flow: row nowrap;
        align-items: center;
        font-size: $font-size;
        color: map-get($this, 'label-color');
    }

    %radio-display--disabled {
        pointer-events: none;
        color: map-get($this, 'disabled-color');
        user-select: none;
    }

    %radio-composite {
        position: relative;
        display: inline-block;
        width: $size;
        height: $size;
        line-height: $size;
        cursor: pointer;
        color: map-get($this, 'label-color');
        user-select: none;

        &::before,
        &::after {
            position: absolute;
            content: '';
            width: $size;
            height: $size;
            left: 0;
            top: 0;
            border-radius: $border-radius;
        }

        &::before {
            backface-visibility: hidden;
            transform: scale3d(0, 0, 0);
            transition: $transition;
        }

        &::after {
            border: $border-style map-get($this, 'empty-color');
        }
    }

    %radio-composite--x {
        &::before {
            border: $border-style map-get($this, 'fill-color');
            background-color: map-get($this, 'fill-color');
            transform: scale3d(.5, .5, .5);
        }

        &::after {
            border: $border-style map-get($this, 'fill-color');
        }
    }

    %radio-composite--disabled {
        &::after {
            border: $border-style map-get($this, 'disabled-color');
        }
    }

    %radio-composite--x--disabled {
        &::after {
            border: $border-style map-get($this, 'disabled-color');
        }

        &::before {
            background-color: map-get($this, 'disabled-color');
            border: $border-style transparent;
        }
    }

    %radio-label {
        color: currentColor;
        font-size: $font-size;
        line-height: 1;
        cursor: pointer;
        user-select: none;
        word-wrap: break-all;
    }

    %radio-label--after {
        margin-left: $label-margin;

        [dir='rtl'] & {
            margin-left: initial;
            margin-right: $label-margin;
        }
    }

    %radio-label--before {
        order: -1;
        margin-right: $label-margin;

        [dir='rtl'] & {
            margin-right: initial;
            margin-left: $label-margin;
        }
    }

    %radio-ripple {
        @include igx-ripple((
            color: map-get($this, 'fill-color')
        ));
        position: absolute;
        top: calc(50% - #{$ripple-radius});
        left: calc(50% - #{$ripple-radius});
        width: $ripple-size;
        height: $ripple-size;
        border-radius: $ripple-radius;
        overflow: hidden;
        pointer-events: none;
        filter: opacity(1);
    }
}
